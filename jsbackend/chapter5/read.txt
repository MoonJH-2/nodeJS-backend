학습 목표
비동기 처리 방식으로 콜백(callback), 프로미스(promise), 어싱크 어웨이트(async await)가 있습니다.
콜백은 요청이 끝난 후 실행할 함수를 매개변수로 추가하는 방식이며, 프로미스는 Promise 객체를 반환하는 방식입니다.
어싱크 어웨이트는 프로미스를 더욱 간단하게 async await라는 구문으로 변경한 문법입니다.

핵심 키워드
비동기 처리 - 비동기 처리
콜백 - 콜백 함수
프로미스 - 이행, 거절, 대기
어싱크 어웨이트 - 가독성

비동기 프로그래밍에서는 임의의 순서로 또는 동시에 작업이 실행될 수 있습니다.
자바 스크립트는 런타임에서 싱글 스레드로 동작합니다. 싱글 스레드로 동작하지만 
콜백, 프로미스, 어싱크 어웨이트 방법을 사용하면 자바 스크립트에서 비동기 처리를 할 수 있습니다.

콜백은 함수의 파라미터로 함수를 전달하며, 비동기 처리가 끝났을 때 전달된 함수를 실행합니다.
콜백은 가독성이 좋지 못하여 유지보수 및 디버깅이 힘듭니다.

프로미스(Promise 객체 사용)는 콜백 대신 사용할 수 있는 방법으로 비동기 작업이 완료되면 결과를 반환하는 객체입니다.
프로미스 객체는 상태를 가지고 있으며 처음에는 대기였다가 작업이 완료되면 성공 또는 실패 상태가 됩니다.
then(), catch() 메서드를 사용하여 성공과 실패에 대한 처리를 할 수 있습니다.

어싱크 어웨이트(async, await 키워드 사용)는 프로미스를 사용하는 비동기 작업을 동기적으로 처리하는 것처럼 코드를 작성할 수 있게 해줍니다.
async가 붙어 있는 함수를 실행할 때 await 키워드를 사용하여 비동기 작업이 완료될 때까지 기다릴 수 있습니다.